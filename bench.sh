#!/bin/sh -v

python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k':  1, 'n':600})"
python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k':  2, 'n':600})"
python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k':  4, 'n':600})"
python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k':  8, 'n':600})"
python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k': 16, 'n':600})"
python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k': 32, 'n':600})"
python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k': 64, 'n':600})"
python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k':128, 'n':600})"
python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k':256, 'n':600})"
python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k':512, 'n':600})"

python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k':3, 'n':4})"
python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k':3, 'n':8})"
python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k':3, 'n':16})"
python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k':3, 'n':32})"
python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k':3, 'n':64})"
python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k':3, 'n':128})"
python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k':3, 'n':256})"
python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k':3, 'n':512})"
python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k':3, 'n':1024})"
python3 -m timeit -s "import src.web_controller as web" -u "msec" "web.handle_generate_matrix({'k':3, 'n':2048})"

python3 -m timeit -s "import src.web_controller as web; v = ''.join(['01' for _ in range(  2)])" -u "msec" "web.handle_vector_encode({'vector': v, 'gen_matrix':'[1111111]', 'error_chance':'0.5'})"
python3 -m timeit -s "import src.web_controller as web; v = ''.join(['01' for _ in range(  4)])" -u "msec" "web.handle_vector_encode({'vector': v, 'gen_matrix':'[1111111]', 'error_chance':'0.5'})"
python3 -m timeit -s "import src.web_controller as web; v = ''.join(['01' for _ in range(  8)])" -u "msec" "web.handle_vector_encode({'vector': v, 'gen_matrix':'[1111111]', 'error_chance':'0.5'})"
python3 -m timeit -s "import src.web_controller as web; v = ''.join(['01' for _ in range( 16)])" -u "msec" "web.handle_vector_encode({'vector': v, 'gen_matrix':'[1111111]', 'error_chance':'0.5'})"
python3 -m timeit -s "import src.web_controller as web; v = ''.join(['01' for _ in range( 32)])" -u "msec" "web.handle_vector_encode({'vector': v, 'gen_matrix':'[1111111]', 'error_chance':'0.5'})"
python3 -m timeit -s "import src.web_controller as web; v = ''.join(['01' for _ in range( 64)])" -u "msec" "web.handle_vector_encode({'vector': v, 'gen_matrix':'[1111111]', 'error_chance':'0.5'})"
python3 -m timeit -s "import src.web_controller as web; v = ''.join(['01' for _ in range(128)])" -u "msec" "web.handle_vector_encode({'vector': v, 'gen_matrix':'[1111111]', 'error_chance':'0.5'})"
python3 -m timeit -s "import src.web_controller as web; v = ''.join(['01' for _ in range(256)])" -u "msec" "web.handle_vector_encode({'vector': v, 'gen_matrix':'[1111111]', 'error_chance':'0.5'})"
python3 -m timeit -s "import src.web_controller as web; v = ''.join(['01' for _ in range(512)])" -u "msec" "web.handle_vector_encode({'vector': v, 'gen_matrix':'[1111111]', 'error_chance':'0.5'})"

python3 -m timeit -s "import src.web_controller as web; v = ''.join(['01' for _ in range(256)]); g='[' + ''.join('1' for _ in range(   4)) + ']'" -u "sec" -n 3 "web.handle_vector_encode({'vector': v, 'gen_matrix':g, 'error_chance':'0.5'})"
python3 -m timeit -s "import src.web_controller as web; v = ''.join(['01' for _ in range(256)]); g='[' + ''.join('1' for _ in range(   8)) + ']'" -u "sec" -n 3 "web.handle_vector_encode({'vector': v, 'gen_matrix':g, 'error_chance':'0.5'})"
python3 -m timeit -s "import src.web_controller as web; v = ''.join(['01' for _ in range(256)]); g='[' + ''.join('1' for _ in range(  16)) + ']'" -u "sec" -n 3 "web.handle_vector_encode({'vector': v, 'gen_matrix':g, 'error_chance':'0.5'})"
python3 -m timeit -s "import src.web_controller as web; v = ''.join(['01' for _ in range(256)]); g='[' + ''.join('1' for _ in range(  32)) + ']'" -u "sec" -n 3 "web.handle_vector_encode({'vector': v, 'gen_matrix':g, 'error_chance':'0.5'})"
python3 -m timeit -s "import src.web_controller as web; v = ''.join(['01' for _ in range(256)]); g='[' + ''.join('1' for _ in range(  64)) + ']'" -u "sec" -n 3 "web.handle_vector_encode({'vector': v, 'gen_matrix':g, 'error_chance':'0.5'})"
python3 -m timeit -s "import src.web_controller as web; v = ''.join(['01' for _ in range(256)]); g='[' + ''.join('1' for _ in range( 128)) + ']'" -u "sec" -n 3 "web.handle_vector_encode({'vector': v, 'gen_matrix':g, 'error_chance':'0.5'})"
python3 -m timeit -s "import src.web_controller as web; v = ''.join(['01' for _ in range(256)]); g='[' + ''.join('1' for _ in range( 256)) + ']'" -u "sec" -n 3 "web.handle_vector_encode({'vector': v, 'gen_matrix':g, 'error_chance':'0.5'})"
python3 -m timeit -s "import src.web_controller as web; v = ''.join(['01' for _ in range(256)]); g='[' + ''.join('1' for _ in range( 512)) + ']'" -u "sec" -n 3 "web.handle_vector_encode({'vector': v, 'gen_matrix':g, 'error_chance':'0.5'})"
python3 -m timeit -s "import src.web_controller as web; v = ''.join(['01' for _ in range(256)]); g='[' + ''.join('1' for _ in range(1024)) + ']'" -u "sec" -n 3 "web.handle_vector_encode({'vector': v, 'gen_matrix':g, 'error_chance':'0.5'})"

python3 -m timeit -s "import src.web_controller as web; n =   2; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 3 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"
python3 -m timeit -s "import src.web_controller as web; n =   2; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 3 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"
python3 -m timeit -s "import src.web_controller as web; n =   3; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 3 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"
python3 -m timeit -s "import src.web_controller as web; n =   4; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 3 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"
python3 -m timeit -s "import src.web_controller as web; n =   5; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 3 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"
python3 -m timeit -s "import src.web_controller as web; n =   6; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 3 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"
python3 -m timeit -s "import src.web_controller as web; n =   7; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 3 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"
python3 -m timeit -s "import src.web_controller as web; n =   8; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 3 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"
python3 -m timeit -s "import src.web_controller as web; n =   9; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 3 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"
python3 -m timeit -s "import src.web_controller as web; n =  10; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 3 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"
python3 -m timeit -s "import src.web_controller as web; n =  11; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 3 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"
python3 -m timeit -s "import src.web_controller as web; n =  12; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 3 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"
python3 -m timeit -s "import src.web_controller as web; n =  13; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 3 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"
python3 -m timeit -s "import src.web_controller as web; n =  14; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 3 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"
python3 -m timeit -s "import src.web_controller as web; n =  15; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 3 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"
python3 -m timeit -s "import src.web_controller as web; n =  16; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 1 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"
python3 -m timeit -s "import src.web_controller as web; n = 128; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 3 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"
python3 -m timeit -s "import src.web_controller as web; n = 256; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 3 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"
python3 -m timeit -s "import src.web_controller as web; n = 512; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 3 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"
python3 -m timeit -s "import src.web_controller as web; n =1024; v = ''.join(['1' for _ in range(n)]); g='[' + ''.join('1' for _ in range(n)) + ']'; e=''.join('1' if idx > (n-1)/2 else '0' for idx in range(n))" -u "sec" -n 3 "web.handle_vector_send({'encoded_vector': v, 'gen_matrix':g, 'error_vector':e, 'message_len':n})"